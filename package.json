{
  "name": "gptcommit",
  "displayName": "vscode-gptcommit",
  "description": "Automated git commit messages using GPT models",
  "version": "0.2.0",
  "repository": {
    "url": "https://github.com/pwwang/vscode-gptcommit"
  },
  "engines": {
    "vscode": "^1.70.0"
  },
  "publisher": "pwwang",
  "categories": [
    "Other"
  ],
  "keywords": [
    "git",
    "commit",
    "gpt",
    "openai"
  ],
  "icon": "icon.png",
  "activationEvents": [
    "onCommand:gptcommit.generateGitCommitMessage",
    "onCommand:gptcommit.setupOpenAIApiKey",
    "onCommand:gptcommit.useDifferentModel",
    "onCommand:gptcommit.setOutputLanguage"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "gptcommit.generateGitCommitMessage",
        "title": "GPTCommit: Generate Git Commit Message",
        "icon": "$(output)",
        "enablement": "!gptcommit.generating"
      },
      {
        "command": "gptcommit.setupOpenAIApiKey",
        "title": "GPTCommit: Setup OpenAI API Key"
      },
      {
        "command": "gptcommit.useDifferentModel",
        "title": "GPTCommit: Use a different OpenAI model"
      },
      {
        "command": "gptcommit.setOutputLanguage",
        "title": "GPTCommit: Set output language"
      }
    ],
    "menus": {
        "scm/title": [
            {
                "when": "scmProvider == git",
                "command": "gptcommit.generateGitCommitMessage",
                "group": "navigation"
            }
        ]
    },
    "configuration": {
      "title": "GPTCommit",
      "properties": {
          "gptcommit.gptcommitPath": {
              "type": "string",
              "default": "",
              "description": "Path to gptcommit executable."
          },
          "gptcommit.expressMode": {
              "type": "boolean",
              "default": false,
              "description": "If true, generated message will be filled into the Source Control commit message input box directly, instead of opening a new editor."
          },
          "gptcommit.expressModeContent": {
              "type": "string",
              "default": "title + summary",
              "enum": [
                  "title",
                  "title + summary",
                  "title + breakdown",
                  "title + summary + breakdown"
              ],
              "enumDescriptions": [
                  "Only the title",
                  "Title and bullet-point summary",
                  "Title and breakdown of each changed file",
                  "Title, bullet-point summary and each changed file"
              ],
              "description": "Content of the message to fill in the express mode."
          },
          "gptcommit.onFiles": {
              "type": "string",
              "default": "tryStagedThenUnstaged",
              "enum": [
                  "staged",
                  "unstaged",
                  "tryStagedThenUnstaged"
              ],
              "enumDescriptions": [
                  "Only staged files",
                  "Only unstaged files",
                  "Staged files, if any, otherwise unstaged files"
              ],
              "description": "Diff of files to use for generating the commit message."
          }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/vscode": "^1.70.0",
    "@types/glob": "^8.0.1",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@typescript-eslint/eslint-plugin": "^5.49.0",
    "@typescript-eslint/parser": "^5.49.0",
    "eslint": "^8.33.0",
    "glob": "^8.1.0",
    "mocha": "^10.1.0",
    "typescript": "^4.9.4",
    "@vscode/test-electron": "^2.2.2"
  }
}
